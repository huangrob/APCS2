import java.util.*;

public class FracCalc {
	
	public static void main (String[] args){
		Scanner userInput = new Scanner(System.in);
		System.out.println("Enter two mixed fractions (with underscore representing \"and\") separated by spaces and an operator.");
		String mixedFraction = userInput.nextLine();
		do {
			if (mixedFraction.contains(" ") && (mixedFraction.contains("+")||mixedFraction.contains("-")||mixedFraction.contains("*")||mixedFraction.contains("/"))){
				System.out.println(produceAnswer(mixedFraction));
			} 
			else {
				System.out.println("Please enter a fraction with an operator and spaces between each term.");
			}
			System.out.println("If you wish to quit, type quit");
			System.out.println("Enter two mixed fractions (with underscore representing \"and\") separated by spaces and an operator.");
			mixedFraction = userInput.nextLine();
		}
		while (!mixedFraction.equals("quit"));
	}
	
	public static String produceAnswer(String mixedFraction){
		if (mixedFraction.contains(" ")){
			String[] produceAnswer = mixedFraction.split(" ");
			String[] firstOperand = produceFirstOperand(produceAnswer);
			String[] secondOperand = produceSecondOperand(produceAnswer);
			String operator = produceAnswer[1];
			return calculateEquation(firstOperand, secondOperand, operator);
		} else {
			return "Please enter spaces between the fractions.";
		}
	}
	
	public static int[] calculateEquation (String[] firstOperand, String[] secondOperand, String operator){
		int[] first = stringToInt(firstOperand);
		int[] second = stringToInt(secondOperand);
		if (operator.equals("+")){
			return add(first, second);
		}
		if (operator.equals("-")){
			return subtract(first, second);
		}
		if (operator.equals("*")){
			return multiply(first, second);
		}
		if (operator.equals("/")){
			return divide(first, second);
		}
	}
	
	public static String[] produceFirstOperand(String[] produceAnswer) {
		String firstOperand = produceAnswer[0];
		if (firstOperand.contains("_") && firstOperand.contains("/")){
			return mixed(firstOperand);
		} else if (!firstOperand.contains("/") && !firstOperand.contains("_")){
			return integer(firstOperand);
		} else {
			return improper(firstOperand);
		}
	}
	
	public static String[] produceSecondOperand (String[] produceAnswer) {
		String secondOperand = produceAnswer[2];
		if (secondOperand.contains("_") && secondOperand.contains("/")){
			return mixed(secondOperand);
		} else if (!secondOperand.contains("/") && !secondOperand.contains("_")){
			return integer(secondOperand);
		} else {
			return improper(secondOperand);
		}
	}
	
	public static String[] mixed (String secondOperand){
		String[] produceAnswerWhole = secondOperand.split("_");
		String whole = produceAnswerWhole[0];
		String fraction = produceAnswerWhole[1];
		String[] produceAnswerFrac = fraction.split("/");
		String numerator = produceAnswerFrac[0];
		String denominator = produceAnswerFrac[1];
		String[] parsedFraction = {whole, numerator, denominator};
		return parsedFraction;
	}
	
	public static String[] integer (String secondOperand){
		String whole = secondOperand;
		String numerator = "0";
		String denominator = "1";
		String[] parsedFraction = {whole, numerator, denominator};
		return parsedFraction;
	}
	
	public static String[] improper (String secondOperand){
		String[] produceAnswerFrac = secondOperand.split("/");
		String numerator = produceAnswerFrac[0];
		String denominator = produceAnswerFrac[1];
		String whole = "0";
		String[] parsedFraction = {whole, numerator, denominator};
		return parsedFraction;
	}
	
	public static int[] stringToInt (String[] stringArray){
		int[] intArray = new int[stringArray.length];
		for (int i = 0; i < stringArray.length; i++) {
			intArray[i] = Integer.parseInt(stringArray[i]);
		}
		return intArray;
	}
	
	public static int[] add (int[] firstOperand, int[] secondOperand){
		int[] answer = new int[3];
		for (int i = 0; i <= 2; i++) {
			answer[i] = firstOperand[i] + secondOperand[2];
		}
		return answer;
	}
	
	public static int[] subtract (int[] firstOperand, int[] secondOperand){
		int[] answer = new int[3];
		for (int i = 0; i <= 2; i++) {
			answer[i] = firstOperand[i] - secondOperand[2];
		}
		return answer;
	}
	
	public static int[] multiply (int[] firstOperand, int[] secondOperand){
		int[] answer = new int[3];
		for (int i = 0; i <= 2; i++) {
			answer[i] = firstOperand[i] * secondOperand[2];
		}
		return answer;
	}
	
	public static int[] divide (int[] firstOperand, int[] secondOperand){
		int[] answer = new int[3];
		for (int i = 0; i <= 2; i++) {
			answer[i] = firstOperand[i] / secondOperand[2];
		}
		return answer;
	}
}
